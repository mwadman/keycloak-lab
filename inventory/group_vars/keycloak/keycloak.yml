---
keycloak_admin_username: "admin"
keycloak_admin_password: "admin"

keycloak_postgres_username: "admin"
keycloak_postgres_password: "admin"
keycloak_postgres_database: "keycloak"

keycloak_podman_host_directories: # Container chowns directory to subuid
  /home/podman/keycloak_podman/volumes/postgres: # Can't use variables in key names
    owner: "{{ (ansible_facts['getent_passwd'][podman_run_as_user][1] | int * 100) + 69 }}" # postgres runs as uid 69
    group: "{{ podman_run_as_user }}"
    mode: "0700"
keycloak_podman_secrets:
  - name: "keycloak-admin-credentials"
    data: |
      apiVersion: v1
      data:
        username: "{{ keycloak_admin_username | b64encode }}"
        password: "{{ keycloak_admin_password | b64encode }}"
      kind: Secret
      metadata:
        name: keycloak-admin-credentials
    skip_existing: true
  - name: "postgres-credentials"
    data: |
      apiVersion: v1
      data:
        username: "{{ keycloak_postgres_username | b64encode }}"
        password: "{{ keycloak_postgres_password | b64encode }}"
      kind: Secret
      metadata:
        name: postgres-credentials
    skip_existing: true
keycloak_podman_kube_specs:
  - state: "started"
    kube_file_content:
      apiVersion: "v1"
      kind: "Pod"
      metadata:
        name: "keycloak"
      spec:
        containers:
          - name: "keycloak"
            image: "quay.io/keycloak/keycloak:24.0"
            ports:
              - containerPort: 8443
                hostPort: 8443
            args:
              - "start"
            env:
              - name: "KEYCLOAK_ADMIN"
                valueFrom:
                  secretKeyRef:
                    name: "keycloak-admin-credentials"
                    key: "username"
              - name: "KEYCLOAK_ADMIN_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: "keycloak-admin-credentials"
                    key: "password"
              - name: "KC_DB"
                value: "postgres"
              # - name: "KC_DB_URL"
              #   value: "jdbc:postgresql://postgres/{{ keycloak_postgres_database }}"
              - name: "KC_DB_URL_HOST"
                value: "localhost"
              - name: "KC_DB_URL_PORT"
                value: 5432
              - name: "KC_DB_URL_DATABASE"
                value: "{{ keycloak_postgres_database }}"
              - name: "KC_DB_USERNAME"
                valueFrom:
                  secretKeyRef:
                    name: "postgres-credentials"
                    key: "username"
              - name: "KC_DB_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: "postgres-credentials"
                    key: "password"
              - name: "KC_HOSTNAME"
                value: "{{ ansible_hostname }}.{{ ansible_dns.search[0] }}"
              - name: "KC_HTTPS_CERTIFICATE_KEY_FILE"
                value: "/etc/pki/tls/selfsigned/selfsigned.key"
              - name: "KC_HTTPS_CERTIFICATE_FILE"
                value: "/etc/pki/tls/selfsigned/selfsigned.pem"
              - name: "JAVA_OPTS_APPEND"
                value: "-Djava.net.preferIPv4Stack=true" # Disables IPv6
            volumeMounts:
              - name: "self-signed-certificate"
                mountPath: "/etc/pki/tls/selfsigned:z"
                readOnly: true
          - name: "postgresql"
            image: "docker.io/postgres:15.7-alpine" # Tested version - https://www.keycloak.org/server/db
            volumeMounts:
              - mountPath: "/var/lib/postgresql/data:Z"
                name: "postgres-volume"
            env:
              - name: "POSTGRES_USER"
                valueFrom:
                  secretKeyRef:
                    name: "postgres-credentials"
                    key: "username"
              - name: "POSTGRES_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: "postgres-credentials"
                    key: "password"
              - name: "POSTGRES_DB"
                value: "{{ keycloak_postgres_database }}"
        volumes:
          - name: "postgres-volume"
            hostPath:
              path: "/home/{{ podman_run_as_user }}/keycloak_podman/volumes/postgres"
          - name: "self-signed-certificate"
            hostPath:
              path: "/home/{{ podman_run_as_user }}/certs"

keycloak_common:
  keycloak_url: "https://keycloak.lab.vagrant:8443"
  realm: "master"
  username: "{{ keycloak_admin_username }}"
  password: "{{ keycloak_admin_password }}"
  validate_certs: false # Remove in prod
keycloak_realms:
  - realm: "ldap"
keycloak_user_federations:
  - realm: "ldap"
    name: "ldap"
    provider_id: "ldap"
    authType: "simple"
    bindCredential: "{{ openldap_readonly_password }}"
    bindDn: "cn={{ openldap_readonly_username }},dc={{ ansible_dns.search[0] | split('.') | join(',dc=') }}"
    connectionUrl: "ldap://openldap.dns.podman"
    rdnLDAPAttribute: "uid"
    syncRegistrations: true
    userObjectClasses: "inetOrgPerson"
    usernameLDAPAttribute: "uid"
    usersDn: "ou=People,dc={{ ansible_dns.search[0] | split('.') | join(',dc=') }}"
    uuidLDAPAttribute: "uid"
keycloak_clients:
  - realm: "ldap"
    id: "gitlab"
    base_url: "http://keycloak.lab.vagrant:9080"
    redirect_uris:
      - "http://keycloak.lab.vagrant:9080/*"
    secret: "abcdefghijklmnopqrstuvwxyz123456"
